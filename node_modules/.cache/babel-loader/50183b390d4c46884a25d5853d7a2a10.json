{"ast":null,"code":"import { CreateSquare } from './createSquare';\n\nfunction getRndInteger(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction getEmptySquaresCount(squares) {\n  var numberOfEmpty = squares.length * squares[0].length;\n\n  for (var i = 0; i !== squares.length; i++) {\n    var row = squares[i];\n\n    for (var j = 0; j !== row.length; j++) {\n      if (row[j]) {\n        numberOfEmpty--;\n      }\n    }\n  }\n\n  return numberOfEmpty;\n}\n\nexport function generateNewTile(squares) {\n  var emptyCount = getEmptySquaresCount(squares);\n  if (emptyCount === 0) return squares;\n  var nextNumber = getRndInteger(0, 9) === 9 ? 4 : 2; // 10% chance for 4 to appear\n\n  var nextPosition = getRndInteger(0, emptyCount - 1);\n\n  for (var i = 0; i !== squares.length; i++) {\n    var row = squares[i];\n\n    for (var j = 0; j !== row.length; j++) {\n      if (row[j]) {\n        continue;\n      }\n\n      if (nextPosition === 0) {\n        squares[i][j] = CreateSquare(nextNumber);\n        return squares;\n      }\n\n      nextPosition--;\n    }\n  }\n}","map":{"version":3,"sources":["/home/aashan/2048/src/Components/actions/generateTileHandler.js"],"names":["CreateSquare","getRndInteger","min","max","Math","floor","random","getEmptySquaresCount","squares","numberOfEmpty","length","i","row","j","generateNewTile","emptyCount","nextNumber","nextPosition"],"mappings":"AAAE,SAASA,YAAT,QAA6B,gBAA7B;;AAEA,SAASC,aAAT,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA+CA,GAAtD;AACD;;AAED,SAASK,oBAAT,CAA8BC,OAA9B,EAAuC;AACrC,MAAIC,aAAa,GAAGD,OAAO,CAACE,MAAR,GAAiBF,OAAO,CAAC,CAAD,CAAP,CAAWE,MAAhD;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,KAAKH,OAAO,CAACE,MAA9B,EAAsCC,CAAC,EAAvC,EAA2C;AACzC,QAAMC,GAAG,GAAGJ,OAAO,CAACG,CAAD,CAAnB;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,KAAKD,GAAG,CAACF,MAA1B,EAAkCG,CAAC,EAAnC,EAAuC;AACrC,UAAID,GAAG,CAACC,CAAD,CAAP,EAAY;AACVJ,QAAAA,aAAa;AACd;AACF;AACF;;AACD,SAAOA,aAAP;AACD;;AAED,OAAO,SAASK,eAAT,CAAyBN,OAAzB,EAAkC;AACvC,MAAIO,UAAU,GAAGR,oBAAoB,CAACC,OAAD,CAArC;AACA,MAAIO,UAAU,KAAK,CAAnB,EACE,OAAOP,OAAP;AAEF,MAAIQ,UAAU,GAAGf,aAAa,CAAC,CAAD,EAAI,CAAJ,CAAb,KAAwB,CAAxB,GAA4B,CAA5B,GAAgC,CAAjD,CALuC,CAKa;;AACpD,MAAIgB,YAAY,GAAGhB,aAAa,CAAC,CAAD,EAAIc,UAAU,GAAG,CAAjB,CAAhC;;AAEA,OAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,KAAKH,OAAO,CAACE,MAA9B,EAAsCC,CAAC,EAAvC,EAA2C;AACzC,QAAMC,GAAG,GAAGJ,OAAO,CAACG,CAAD,CAAnB;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,KAAKD,GAAG,CAACF,MAA1B,EAAkCG,CAAC,EAAnC,EAAuC;AACrC,UAAID,GAAG,CAACC,CAAD,CAAP,EAAY;AACV;AACD;;AAED,UAAII,YAAY,KAAK,CAArB,EAAwB;AACtBT,QAAAA,OAAO,CAACG,CAAD,CAAP,CAAWE,CAAX,IAAgBb,YAAY,CAACgB,UAAD,CAA5B;AACA,eAAOR,OAAP;AACD;;AAEDS,MAAAA,YAAY;AACb;AACF;AACF","sourcesContent":["  import { CreateSquare } from './createSquare';\n\n  function getRndInteger(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) ) + min;\n  }\n\n  function getEmptySquaresCount(squares) {\n    let numberOfEmpty = squares.length * squares[0].length;\n    for (let i = 0; i !== squares.length; i++) {\n      const row = squares[i];\n      for (let j = 0; j !== row.length; j++) {\n        if (row[j]) {\n          numberOfEmpty--;\n        }\n      }\n    }\n    return numberOfEmpty;\n  }\n\n  export function generateNewTile(squares) {\n    let emptyCount = getEmptySquaresCount(squares);\n    if (emptyCount === 0)\n      return squares;\n\n    let nextNumber = getRndInteger(0, 9) === 9 ? 4 : 2; // 10% chance for 4 to appear\n    let nextPosition = getRndInteger(0, emptyCount - 1);\n\n    for (let i = 0; i !== squares.length; i++) {\n      const row = squares[i];\n      for (let j = 0; j !== row.length; j++) {\n        if (row[j]) {\n          continue;\n        }\n\n        if (nextPosition === 0) {\n          squares[i][j] = CreateSquare(nextNumber);\n          return squares;\n        }\n\n        nextPosition--;\n      }\n    }\n  }"]},"metadata":{},"sourceType":"module"}