{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar cheerio = require(\"cheerio\");\n\nvar service_1 = require(\"./service\");\n\nvar Facebook =\n/*#__PURE__*/\nfunction (_service_1$Service) {\n  _inherits(Facebook, _service_1$Service);\n\n  function Facebook() {\n    _classCallCheck(this, Facebook);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Facebook).apply(this, arguments));\n  }\n\n  _createClass(Facebook, null, [{\n    key: \"getProofUrl\",\n    value: function getProofUrl(proof) {\n      return this.normalizeUrl(proof);\n    }\n  }, {\n    key: \"normalizeUrl\",\n    value: function normalizeUrl(proof) {\n      var proofUrl = proof.proof_url.toLowerCase();\n      var urlRegex = /(?:http[s]*:\\/\\/){0,1}(?:[a-zA-Z0-9-]+\\.)+facebook\\.com/;\n      proofUrl = _get(_getPrototypeOf(Facebook), \"prefixScheme\", this).call(this, proofUrl);\n\n      if (proofUrl.startsWith('https://facebook.com')) {\n        var tokens = proofUrl.split('https://facebook.com');\n        proofUrl = \"https://www.facebook.com\".concat(tokens[1]);\n        tokens = proofUrl.split('https://www.facebook.com/')[1].split('/posts/');\n        var postId = tokens[1];\n        proofUrl = \"https://www.facebook.com/\".concat(proof.identifier, \"/posts/\").concat(postId);\n      } else if (proofUrl.match(urlRegex)) {\n        var _tokens = proofUrl.split('facebook.com/')[1].split('/posts/');\n\n        var _postId = _tokens[1];\n        proofUrl = \"https://www.facebook.com/\".concat(proof.identifier, \"/posts/\").concat(_postId);\n      } else {\n        throw new Error(\"Proof url \".concat(proof.proof_url, \" is not valid for service \").concat(proof.service));\n      }\n\n      return proofUrl;\n    }\n  }, {\n    key: \"getProofStatement\",\n    value: function getProofStatement(searchText) {\n      var $ = cheerio.load(searchText);\n      var statement = $('meta[name=\"description\"]').attr('content');\n      return statement !== undefined ? statement.trim() : '';\n    }\n  }]);\n\n  return Facebook;\n}(service_1.Service);\n\nexports.Facebook = Facebook;","map":{"version":3,"sources":["../../../src/profiles/services/facebook.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;IAEM,Q;;;;;;;;;;;;;gCACe,K,EAAU;AAC3B,aAAO,KAAK,YAAL,CAAkB,KAAlB,CAAP;AACD;;;iCAEmB,K,EAAU;AAC5B,UAAI,QAAQ,GAAG,KAAK,CAAC,SAAN,CAAgB,WAAhB,EAAf;AACA,UAAM,QAAQ,GAAG,yDAAjB;AAEA,MAAA,QAAQ,oEAAsB,QAAtB,CAAR;;AAEA,UAAI,QAAQ,CAAC,UAAT,CAAoB,sBAApB,CAAJ,EAAiD;AAC/C,YAAI,MAAM,GAAG,QAAQ,CAAC,KAAT,CAAe,sBAAf,CAAb;AACA,QAAA,QAAQ,qCAA8B,MAAM,CAAC,CAAD,CAApC,CAAR;AACA,QAAA,MAAM,GAAG,QAAQ,CAAC,KAAT,CAAe,2BAAf,EAA4C,CAA5C,EAA+C,KAA/C,CAAqD,SAArD,CAAT;AACA,YAAM,MAAM,GAAG,MAAM,CAAC,CAAD,CAArB;AACA,QAAA,QAAQ,sCAA+B,KAAK,CAAC,UAArC,oBAAyD,MAAzD,CAAR;AACD,OAND,MAMO,IAAI,QAAQ,CAAC,KAAT,CAAe,QAAf,CAAJ,EAA8B;AACnC,YAAM,OAAM,GAAG,QAAQ,CAAC,KAAT,CAAe,eAAf,EAAgC,CAAhC,EAAmC,KAAnC,CAAyC,SAAzC,CAAf;;AACA,YAAM,OAAM,GAAG,OAAM,CAAC,CAAD,CAArB;AACA,QAAA,QAAQ,sCAA+B,KAAK,CAAC,UAArC,oBAAyD,OAAzD,CAAR;AACD,OAJM,MAIA;AACL,cAAM,IAAI,KAAJ,qBAAuB,KAAK,CAAC,SAA7B,uCAAmE,KAAK,CAAC,OAAzE,EAAN;AACD;;AAED,aAAO,QAAP;AACD;;;sCAEwB,U,EAAkB;AACzC,UAAM,CAAC,GAAG,OAAO,CAAC,IAAR,CAAa,UAAb,CAAV;AACA,UAAM,SAAS,GAAG,CAAC,CAAC,0BAAD,CAAD,CAA8B,IAA9B,CAAmC,SAAnC,CAAlB;AACA,aAAQ,SAAS,KAAK,SAAf,GAA4B,SAAS,CAAC,IAAV,EAA5B,GAA+C,EAAtD;AACD;;;;EAhCoB,SAAA,CAAA,O;;AAmCd,OAAA,CAAA,QAAA,GAAA,QAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cheerio = require(\"cheerio\");\nconst service_1 = require(\"./service\");\nclass Facebook extends service_1.Service {\n    static getProofUrl(proof) {\n        return this.normalizeUrl(proof);\n    }\n    static normalizeUrl(proof) {\n        let proofUrl = proof.proof_url.toLowerCase();\n        const urlRegex = /(?:http[s]*:\\/\\/){0,1}(?:[a-zA-Z0-9-]+\\.)+facebook\\.com/;\n        proofUrl = super.prefixScheme(proofUrl);\n        if (proofUrl.startsWith('https://facebook.com')) {\n            let tokens = proofUrl.split('https://facebook.com');\n            proofUrl = `https://www.facebook.com${tokens[1]}`;\n            tokens = proofUrl.split('https://www.facebook.com/')[1].split('/posts/');\n            const postId = tokens[1];\n            proofUrl = `https://www.facebook.com/${proof.identifier}/posts/${postId}`;\n        }\n        else if (proofUrl.match(urlRegex)) {\n            const tokens = proofUrl.split('facebook.com/')[1].split('/posts/');\n            const postId = tokens[1];\n            proofUrl = `https://www.facebook.com/${proof.identifier}/posts/${postId}`;\n        }\n        else {\n            throw new Error(`Proof url ${proof.proof_url} is not valid for service ${proof.service}`);\n        }\n        return proofUrl;\n    }\n    static getProofStatement(searchText) {\n        const $ = cheerio.load(searchText);\n        const statement = $('meta[name=\"description\"]').attr('content');\n        return (statement !== undefined) ? statement.trim() : '';\n    }\n}\nexports.Facebook = Facebook;\n//# sourceMappingURL=facebook.js.map"]},"metadata":{},"sourceType":"script"}