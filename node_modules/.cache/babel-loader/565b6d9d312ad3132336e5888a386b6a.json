{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // @ts-ignore: Could not find a declaration file for module\n\nvar inspector = require(\"schema-inspector\");\n\nvar profile_1 = require(\"../profile\");\n\nvar profileTokens_1 = require(\"../profileTokens\");\n\nvar personLegacy_1 = require(\"./personLegacy\");\n\nvar personUtils_1 = require(\"./personUtils\");\n\nvar schemaDefinition = {\n  type: 'object',\n  strict: false,\n  properties: {\n    '@context': {\n      type: 'string',\n      optional: true\n    },\n    '@type': {\n      type: 'string'\n    },\n    '@id': {\n      type: 'string',\n      optional: true\n    },\n    name: {\n      type: 'string',\n      optional: true\n    },\n    givenName: {\n      type: 'string',\n      optional: true\n    },\n    familyName: {\n      type: 'string',\n      optional: true\n    },\n    description: {\n      type: 'string',\n      optional: true\n    },\n    image: {\n      type: 'array',\n      optional: true,\n      items: {\n        type: 'object',\n        properties: {\n          '@type': {\n            type: 'string'\n          },\n          name: {\n            type: 'string',\n            optional: true\n          },\n          contentUrl: {\n            type: 'string',\n            optional: true\n          }\n        }\n      }\n    },\n    website: {\n      type: 'array',\n      optional: true,\n      items: {\n        type: 'object',\n        properties: {\n          '@type': {\n            type: 'string'\n          },\n          url: {\n            type: 'string',\n            optional: true\n          }\n        }\n      }\n    },\n    account: {\n      type: 'array',\n      optional: true,\n      items: {\n        type: 'object',\n        properties: {\n          '@type': {\n            type: 'string'\n          },\n          service: {\n            type: 'string',\n            optional: true\n          },\n          identifier: {\n            type: 'string',\n            optional: true\n          },\n          proofType: {\n            type: 'string',\n            optional: true\n          },\n          proofUrl: {\n            type: 'string',\n            optional: true\n          },\n          proofMessage: {\n            type: 'string',\n            optional: true\n          },\n          proofSignature: {\n            type: 'string',\n            optional: true\n          }\n        }\n      }\n    },\n    worksFor: {\n      type: 'array',\n      optional: true,\n      items: {\n        type: 'object',\n        properties: {\n          '@type': {\n            type: 'string'\n          },\n          '@id': {\n            type: 'string',\n            optional: true\n          }\n        }\n      }\n    },\n    knows: {\n      type: 'array',\n      optional: true,\n      items: {\n        type: 'object',\n        properties: {\n          '@type': {\n            type: 'string'\n          },\n          '@id': {\n            type: 'string',\n            optional: true\n          }\n        }\n      }\n    },\n    address: {\n      type: 'object',\n      optional: true,\n      properties: {\n        '@type': {\n          type: 'string'\n        },\n        streetAddress: {\n          type: 'string',\n          optional: true\n        },\n        addressLocality: {\n          type: 'string',\n          optional: true\n        },\n        postalCode: {\n          type: 'string',\n          optional: true\n        },\n        addressCountry: {\n          type: 'string',\n          optional: true\n        }\n      }\n    },\n    birthDate: {\n      type: 'string',\n      optional: true\n    },\n    taxID: {\n      type: 'string',\n      optional: true\n    }\n  }\n};\n/**\n * @ignore\n */\n\nvar Person =\n/*#__PURE__*/\nfunction (_profile_1$Profile) {\n  _inherits(Person, _profile_1$Profile);\n\n  function Person() {\n    var _this;\n\n    var profile = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Person);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Person).call(this, profile));\n    _this._profile = Object.assign({}, {\n      '@type': 'Person'\n    }, _this._profile);\n    return _this;\n  }\n\n  _createClass(Person, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        profile: this.profile(),\n        name: this.name(),\n        givenName: this.givenName(),\n        familyName: this.familyName(),\n        description: this.description(),\n        avatarUrl: this.avatarUrl(),\n        verifiedAccounts: this.verifiedAccounts(),\n        address: this.address(),\n        birthDate: this.birthDate(),\n        connections: this.connections(),\n        organizations: this.organizations()\n      };\n    }\n  }, {\n    key: \"profile\",\n    value: function profile() {\n      return Object.assign({}, this._profile);\n    }\n  }, {\n    key: \"name\",\n    value: function name() {\n      return personUtils_1.getName(this.profile());\n    }\n  }, {\n    key: \"givenName\",\n    value: function givenName() {\n      return personUtils_1.getGivenName(this.profile());\n    }\n  }, {\n    key: \"familyName\",\n    value: function familyName() {\n      return personUtils_1.getFamilyName(this.profile());\n    }\n  }, {\n    key: \"description\",\n    value: function description() {\n      return personUtils_1.getDescription(this.profile());\n    }\n  }, {\n    key: \"avatarUrl\",\n    value: function avatarUrl() {\n      return personUtils_1.getAvatarUrl(this.profile());\n    }\n  }, {\n    key: \"verifiedAccounts\",\n    value: function verifiedAccounts(verifications) {\n      return personUtils_1.getVerifiedAccounts(this.profile(), verifications);\n    }\n  }, {\n    key: \"address\",\n    value: function address() {\n      return personUtils_1.getAddress(this.profile());\n    }\n  }, {\n    key: \"birthDate\",\n    value: function birthDate() {\n      return personUtils_1.getBirthDate(this.profile());\n    }\n  }, {\n    key: \"connections\",\n    value: function connections() {\n      return personUtils_1.getConnections(this.profile());\n    }\n  }, {\n    key: \"organizations\",\n    value: function organizations() {\n      return personUtils_1.getOrganizations(this.profile());\n    }\n  }], [{\n    key: \"validateSchema\",\n    value: function validateSchema(profile) {\n      var strict = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      schemaDefinition.strict = strict;\n      return inspector.validate(schemaDefinition, profile);\n    }\n  }, {\n    key: \"fromToken\",\n    value: function fromToken(token) {\n      var publicKeyOrAddress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var profile = profileTokens_1.extractProfile(token, publicKeyOrAddress);\n      return new Person(profile);\n    }\n  }, {\n    key: \"fromLegacyFormat\",\n    value: function fromLegacyFormat(legacyProfile) {\n      var profile = personLegacy_1.getPersonFromLegacyFormat(legacyProfile);\n      return new Person(profile);\n    }\n  }]);\n\n  return Person;\n}(profile_1.Profile);\n\nexports.Person = Person;","map":{"version":3,"sources":["../../../src/profiles/profileSchemas/person.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// @ts-ignore: Could not find a declaration file for module\nconst inspector = require(\"schema-inspector\");\nconst profile_1 = require(\"../profile\");\nconst profileTokens_1 = require(\"../profileTokens\");\nconst personLegacy_1 = require(\"./personLegacy\");\nconst personUtils_1 = require(\"./personUtils\");\nconst schemaDefinition = {\n    type: 'object',\n    strict: false,\n    properties: {\n        '@context': { type: 'string', optional: true },\n        '@type': { type: 'string' },\n        '@id': { type: 'string', optional: true },\n        name: { type: 'string', optional: true },\n        givenName: { type: 'string', optional: true },\n        familyName: { type: 'string', optional: true },\n        description: { type: 'string', optional: true },\n        image: {\n            type: 'array',\n            optional: true,\n            items: {\n                type: 'object',\n                properties: {\n                    '@type': { type: 'string' },\n                    name: { type: 'string', optional: true },\n                    contentUrl: { type: 'string', optional: true }\n                }\n            }\n        },\n        website: {\n            type: 'array',\n            optional: true,\n            items: {\n                type: 'object',\n                properties: {\n                    '@type': { type: 'string' },\n                    url: { type: 'string', optional: true }\n                }\n            }\n        },\n        account: {\n            type: 'array',\n            optional: true,\n            items: {\n                type: 'object',\n                properties: {\n                    '@type': { type: 'string' },\n                    service: { type: 'string', optional: true },\n                    identifier: { type: 'string', optional: true },\n                    proofType: { type: 'string', optional: true },\n                    proofUrl: { type: 'string', optional: true },\n                    proofMessage: { type: 'string', optional: true },\n                    proofSignature: { type: 'string', optional: true }\n                }\n            }\n        },\n        worksFor: {\n            type: 'array',\n            optional: true,\n            items: {\n                type: 'object',\n                properties: {\n                    '@type': { type: 'string' },\n                    '@id': { type: 'string', optional: true }\n                }\n            }\n        },\n        knows: {\n            type: 'array',\n            optional: true,\n            items: {\n                type: 'object',\n                properties: {\n                    '@type': { type: 'string' },\n                    '@id': { type: 'string', optional: true }\n                }\n            }\n        },\n        address: {\n            type: 'object',\n            optional: true,\n            properties: {\n                '@type': { type: 'string' },\n                streetAddress: { type: 'string', optional: true },\n                addressLocality: { type: 'string', optional: true },\n                postalCode: { type: 'string', optional: true },\n                addressCountry: { type: 'string', optional: true }\n            }\n        },\n        birthDate: { type: 'string', optional: true },\n        taxID: { type: 'string', optional: true }\n    }\n};\n/**\n * @ignore\n */\nclass Person extends profile_1.Profile {\n    constructor(profile = {}) {\n        super(profile);\n        this._profile = Object.assign({}, {\n            '@type': 'Person'\n        }, this._profile);\n    }\n    static validateSchema(profile, strict = false) {\n        schemaDefinition.strict = strict;\n        return inspector.validate(schemaDefinition, profile);\n    }\n    static fromToken(token, publicKeyOrAddress = null) {\n        const profile = profileTokens_1.extractProfile(token, publicKeyOrAddress);\n        return new Person(profile);\n    }\n    static fromLegacyFormat(legacyProfile) {\n        const profile = personLegacy_1.getPersonFromLegacyFormat(legacyProfile);\n        return new Person(profile);\n    }\n    toJSON() {\n        return {\n            profile: this.profile(),\n            name: this.name(),\n            givenName: this.givenName(),\n            familyName: this.familyName(),\n            description: this.description(),\n            avatarUrl: this.avatarUrl(),\n            verifiedAccounts: this.verifiedAccounts(),\n            address: this.address(),\n            birthDate: this.birthDate(),\n            connections: this.connections(),\n            organizations: this.organizations()\n        };\n    }\n    profile() {\n        return Object.assign({}, this._profile);\n    }\n    name() {\n        return personUtils_1.getName(this.profile());\n    }\n    givenName() {\n        return personUtils_1.getGivenName(this.profile());\n    }\n    familyName() {\n        return personUtils_1.getFamilyName(this.profile());\n    }\n    description() {\n        return personUtils_1.getDescription(this.profile());\n    }\n    avatarUrl() {\n        return personUtils_1.getAvatarUrl(this.profile());\n    }\n    verifiedAccounts(verifications) {\n        return personUtils_1.getVerifiedAccounts(this.profile(), verifications);\n    }\n    address() {\n        return personUtils_1.getAddress(this.profile());\n    }\n    birthDate() {\n        return personUtils_1.getBirthDate(this.profile());\n    }\n    connections() {\n        return personUtils_1.getConnections(this.profile());\n    }\n    organizations() {\n        return personUtils_1.getOrganizations(this.profile());\n    }\n}\nexports.Person = Person;\n//# sourceMappingURL=person.js.map"]},"metadata":{},"sourceType":"script"}