{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar cheerio = require(\"cheerio\");\n\nvar service_1 = require(\"./service\");\n\nvar HackerNews =\n/*#__PURE__*/\nfunction (_service_1$Service) {\n  _inherits(HackerNews, _service_1$Service);\n\n  function HackerNews() {\n    _classCallCheck(this, HackerNews);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(HackerNews).apply(this, arguments));\n  }\n\n  _createClass(HackerNews, null, [{\n    key: \"getBaseUrls\",\n    value: function getBaseUrls() {\n      var baseUrls = ['https://news.ycombinator.com/user?id=', 'http://news.ycombinator.com/user?id=', 'news.ycombinator.com/user?id='];\n      return baseUrls;\n    }\n  }, {\n    key: \"getProofUrl\",\n    value: function getProofUrl(proof) {\n      var baseUrls = this.getBaseUrls();\n\n      var proofUrl = _get(_getPrototypeOf(HackerNews), \"prefixScheme\", this).call(this, proof.proof_url);\n\n      for (var i = 0; i < baseUrls.length; i++) {\n        if (proofUrl === \"\".concat(baseUrls[i]).concat(proof.identifier)) {\n          return proofUrl;\n        }\n      }\n\n      throw new Error(\"Proof url \".concat(proof.proof_url, \" is not valid for service \").concat(proof.service));\n    }\n  }, {\n    key: \"normalizeUrl\",\n    value: function normalizeUrl(proof) {\n      return '';\n    }\n  }, {\n    key: \"getProofStatement\",\n    value: function getProofStatement(searchText) {\n      var $ = cheerio.load(searchText);\n      var tables = $('#hnmain').children().find('table');\n      var statement = '';\n\n      if (tables.length > 0) {\n        tables.each(function (tableIndex, table) {\n          var rows = $(table).find('tr');\n\n          if (rows.length > 0) {\n            rows.each(function (idx, row) {\n              var heading = $(row).find('td').first().text().trim();\n\n              if (heading === 'about:') {\n                statement = $(row).find('td').last().text().trim();\n              }\n            });\n          }\n        });\n      }\n\n      return statement;\n    }\n  }]);\n\n  return HackerNews;\n}(service_1.Service);\n\nexports.HackerNews = HackerNews;","map":{"version":3,"sources":["../../../src/profiles/services/hackerNews.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;IAEM,U;;;;;;;;;;;;;kCACc;AAChB,UAAM,QAAQ,GAAG,CACf,uCADe,EAEf,sCAFe,EAGf,+BAHe,CAAjB;AAKA,aAAO,QAAP;AACD;;;gCAEkB,K,EAAU;AAC3B,UAAM,QAAQ,GAAG,KAAK,WAAL,EAAjB;;AAEA,UAAM,QAAQ,sEAAsB,KAAK,CAAC,SAA5B,CAAd;;AAEA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,MAA7B,EAAqC,CAAC,EAAtC,EAA0C;AACxC,YAAI,QAAQ,eAAQ,QAAQ,CAAC,CAAD,CAAhB,SAAsB,KAAK,CAAC,UAA5B,CAAZ,EAAsD;AACpD,iBAAO,QAAP;AACD;AACF;;AACD,YAAM,IAAI,KAAJ,qBAAuB,KAAK,CAAC,SAA7B,uCAAmE,KAAK,CAAC,OAAzE,EAAN;AACD;;;iCAEmB,K,EAAU;AAC5B,aAAO,EAAP;AACD;;;sCAEwB,U,EAAkB;AACzC,UAAM,CAAC,GAAG,OAAO,CAAC,IAAR,CAAa,UAAb,CAAV;AACA,UAAM,MAAM,GAAG,CAAC,CAAC,SAAD,CAAD,CAAa,QAAb,GAAwB,IAAxB,CAA6B,OAA7B,CAAf;AACA,UAAI,SAAS,GAAG,EAAhB;;AAEA,UAAI,MAAM,CAAC,MAAP,GAAgB,CAApB,EAAuB;AACrB,QAAA,MAAM,CAAC,IAAP,CAAY,UAAC,UAAD,EAAa,KAAb,EAAsB;AAChC,cAAM,IAAI,GAAG,CAAC,CAAC,KAAD,CAAD,CAAS,IAAT,CAAc,IAAd,CAAb;;AAEA,cAAI,IAAI,CAAC,MAAL,GAAc,CAAlB,EAAqB;AACnB,YAAA,IAAI,CAAC,IAAL,CAAU,UAAC,GAAD,EAAM,GAAN,EAAa;AACrB,kBAAM,OAAO,GAAG,CAAC,CAAC,GAAD,CAAD,CAAO,IAAP,CAAY,IAAZ,EACb,KADa,GAEb,IAFa,GAGb,IAHa,EAAhB;;AAKA,kBAAI,OAAO,KAAK,QAAhB,EAA0B;AACxB,gBAAA,SAAS,GAAG,CAAC,CAAC,GAAD,CAAD,CAAO,IAAP,CAAY,IAAZ,EACT,IADS,GAET,IAFS,GAGT,IAHS,EAAZ;AAID;AACF,aAZD;AAaD;AACF,SAlBD;AAmBD;;AAED,aAAO,SAAP;AACD;;;;EAvDsB,SAAA,CAAA,O;;AA0DhB,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cheerio = require(\"cheerio\");\nconst service_1 = require(\"./service\");\nclass HackerNews extends service_1.Service {\n    static getBaseUrls() {\n        const baseUrls = [\n            'https://news.ycombinator.com/user?id=',\n            'http://news.ycombinator.com/user?id=',\n            'news.ycombinator.com/user?id='\n        ];\n        return baseUrls;\n    }\n    static getProofUrl(proof) {\n        const baseUrls = this.getBaseUrls();\n        const proofUrl = super.prefixScheme(proof.proof_url);\n        for (let i = 0; i < baseUrls.length; i++) {\n            if (proofUrl === `${baseUrls[i]}${proof.identifier}`) {\n                return proofUrl;\n            }\n        }\n        throw new Error(`Proof url ${proof.proof_url} is not valid for service ${proof.service}`);\n    }\n    static normalizeUrl(proof) {\n        return '';\n    }\n    static getProofStatement(searchText) {\n        const $ = cheerio.load(searchText);\n        const tables = $('#hnmain').children().find('table');\n        let statement = '';\n        if (tables.length > 0) {\n            tables.each((tableIndex, table) => {\n                const rows = $(table).find('tr');\n                if (rows.length > 0) {\n                    rows.each((idx, row) => {\n                        const heading = $(row).find('td')\n                            .first()\n                            .text()\n                            .trim();\n                        if (heading === 'about:') {\n                            statement = $(row).find('td')\n                                .last()\n                                .text()\n                                .trim();\n                        }\n                    });\n                }\n            });\n        }\n        return statement;\n    }\n}\nexports.HackerNews = HackerNews;\n//# sourceMappingURL=hackerNews.js.map"]},"metadata":{},"sourceType":"script"}