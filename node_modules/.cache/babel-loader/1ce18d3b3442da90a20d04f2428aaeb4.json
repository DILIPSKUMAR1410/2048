{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar cheerio = require(\"cheerio\");\n\nvar service_1 = require(\"./service\");\n\nvar Twitter =\n/*#__PURE__*/\nfunction (_service_1$Service) {\n  _inherits(Twitter, _service_1$Service);\n\n  function Twitter() {\n    _classCallCheck(this, Twitter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Twitter).apply(this, arguments));\n  }\n\n  _createClass(Twitter, null, [{\n    key: \"getBaseUrls\",\n    value: function getBaseUrls() {\n      var baseUrls = ['https://twitter.com/', 'http://twitter.com/', 'twitter.com/'];\n      return baseUrls;\n    }\n  }, {\n    key: \"normalizeUrl\",\n    value: function normalizeUrl(proof) {\n      return '';\n    }\n  }, {\n    key: \"getProofStatement\",\n    value: function getProofStatement(searchText) {\n      var $ = cheerio.load(searchText);\n      var statement = $('meta[property=\"og:description\"]').attr('content');\n\n      if (statement !== undefined) {\n        return statement.trim().replace('“', '').replace('”', '');\n      } else {\n        return '';\n      }\n    }\n  }]);\n\n  return Twitter;\n}(service_1.Service);\n\nexports.Twitter = Twitter;","map":{"version":3,"sources":["../../../src/profiles/services/twitter.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;IAEM,O;;;;;;;;;;;;;kCACc;AAChB,UAAM,QAAQ,GAAG,CACf,sBADe,EAEf,qBAFe,EAGf,cAHe,CAAjB;AAKA,aAAO,QAAP;AACD;;;iCAEmB,K,EAAU;AAC5B,aAAO,EAAP;AACD;;;sCAEwB,U,EAAkB;AACzC,UAAM,CAAC,GAAG,OAAO,CAAC,IAAR,CAAa,UAAb,CAAV;AACA,UAAM,SAAS,GAAG,CAAC,CAAC,iCAAD,CAAD,CAAqC,IAArC,CAA0C,SAA1C,CAAlB;;AACA,UAAI,SAAS,KAAK,SAAlB,EAA6B;AAC3B,eAAO,SAAS,CAAC,IAAV,GAAiB,OAAjB,CAAyB,GAAzB,EAA8B,EAA9B,EAAkC,OAAlC,CAA0C,GAA1C,EAA+C,EAA/C,CAAP;AACD,OAFD,MAEO;AACL,eAAO,EAAP;AACD;AACF;;;;EAtBmB,SAAA,CAAA,O;;AAyBb,OAAA,CAAA,OAAA,GAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cheerio = require(\"cheerio\");\nconst service_1 = require(\"./service\");\nclass Twitter extends service_1.Service {\n    static getBaseUrls() {\n        const baseUrls = [\n            'https://twitter.com/',\n            'http://twitter.com/',\n            'twitter.com/'\n        ];\n        return baseUrls;\n    }\n    static normalizeUrl(proof) {\n        return '';\n    }\n    static getProofStatement(searchText) {\n        const $ = cheerio.load(searchText);\n        const statement = $('meta[property=\"og:description\"]').attr('content');\n        if (statement !== undefined) {\n            return statement.trim().replace('“', '').replace('”', '');\n        }\n        else {\n            return '';\n        }\n    }\n}\nexports.Twitter = Twitter;\n//# sourceMappingURL=twitter.js.map"]},"metadata":{},"sourceType":"script"}