{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar config_1 = require(\"./config\");\n\nvar levels = ['debug', 'info', 'warn', 'error', 'none'];\nvar levelToInt = {};\nvar intToLevel = {};\n\nfor (var index = 0; index < levels.length; index++) {\n  var level = levels[index];\n  levelToInt[level] = index;\n  intToLevel[index] = level;\n}\n/**\n* @ignore\n*/\n\n\nvar Logger =\n/*#__PURE__*/\nfunction () {\n  function Logger() {\n    _classCallCheck(this, Logger);\n  }\n\n  _createClass(Logger, null, [{\n    key: \"error\",\n    value: function error(message) {\n      if (!this.shouldLog('error')) return;\n      console.error(this.logMessage('error', message));\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(message) {\n      if (!this.shouldLog('warn')) return;\n      console.warn(this.logMessage('warn', message));\n    }\n  }, {\n    key: \"info\",\n    value: function info(message) {\n      if (!this.shouldLog('info')) return;\n      console.log(this.logMessage('info', message));\n    }\n  }, {\n    key: \"debug\",\n    value: function debug(message) {\n      if (!this.shouldLog('debug')) return;\n      console.log(this.logMessage('debug', message));\n    }\n  }, {\n    key: \"logMessage\",\n    value: function logMessage(level, message) {\n      return \"[\".concat(level.toUpperCase(), \"] \").concat(message);\n    }\n  }, {\n    key: \"shouldLog\",\n    value: function shouldLog(level) {\n      var currentLevel = levelToInt[config_1.config.logLevel];\n      return currentLevel <= levelToInt[level];\n    }\n  }]);\n\n  return Logger;\n}();\n\nexports.Logger = Logger;","map":{"version":3,"sources":["../src/logger.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAEA,IAAM,MAAM,GAAG,CACb,OADa,EAEb,MAFa,EAGb,MAHa,EAIb,OAJa,EAKb,MALa,CAAf;AAQA,IAAM,UAAU,GAA8B,EAA9C;AACA,IAAM,UAAU,GAA4B,EAA5C;;AAEA,KAAK,IAAI,KAAK,GAAG,CAAjB,EAAoB,KAAK,GAAG,MAAM,CAAC,MAAnC,EAA2C,KAAK,EAAhD,EAAoD;AAClD,MAAM,KAAK,GAAG,MAAM,CAAC,KAAD,CAApB;AACA,EAAA,UAAU,CAAC,KAAD,CAAV,GAAoB,KAApB;AACA,EAAA,UAAU,CAAC,KAAD,CAAV,GAAoB,KAApB;AACD;AAED;;;;;IAGa,M;;;;;;;;;0BACE,O,EAAe;AAC1B,UAAI,CAAC,KAAK,SAAL,CAAe,OAAf,CAAL,EAA8B;AAC9B,MAAA,OAAO,CAAC,KAAR,CAAc,KAAK,UAAL,CAAgB,OAAhB,EAAyB,OAAzB,CAAd;AACD;;;yBAEW,O,EAAe;AACzB,UAAI,CAAC,KAAK,SAAL,CAAe,MAAf,CAAL,EAA6B;AAC7B,MAAA,OAAO,CAAC,IAAR,CAAa,KAAK,UAAL,CAAgB,MAAhB,EAAwB,OAAxB,CAAb;AACD;;;yBAEW,O,EAAe;AACzB,UAAI,CAAC,KAAK,SAAL,CAAe,MAAf,CAAL,EAA6B;AAC7B,MAAA,OAAO,CAAC,GAAR,CAAY,KAAK,UAAL,CAAgB,MAAhB,EAAwB,OAAxB,CAAZ;AACD;;;0BAEY,O,EAAe;AAC1B,UAAI,CAAC,KAAK,SAAL,CAAe,OAAf,CAAL,EAA8B;AAC9B,MAAA,OAAO,CAAC,GAAR,CAAY,KAAK,UAAL,CAAgB,OAAhB,EAAyB,OAAzB,CAAZ;AACD;;;+BAEiB,K,EAAe,O,EAAe;AAC9C,wBAAW,KAAK,CAAC,WAAN,EAAX,eAAmC,OAAnC;AACD;;;8BAEgB,K,EAAa;AAC5B,UAAM,YAAY,GAAG,UAAU,CAAC,QAAA,CAAA,MAAA,CAAO,QAAR,CAA/B;AACA,aAAO,YAAY,IAAI,UAAU,CAAC,KAAD,CAAjC;AACD;;;;;;AA5BH,OAAA,CAAA,MAAA,GAAA,MAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst config_1 = require(\"./config\");\nconst levels = [\n    'debug',\n    'info',\n    'warn',\n    'error',\n    'none'\n];\nconst levelToInt = {};\nconst intToLevel = {};\nfor (let index = 0; index < levels.length; index++) {\n    const level = levels[index];\n    levelToInt[level] = index;\n    intToLevel[index] = level;\n}\n/**\n* @ignore\n*/\nclass Logger {\n    static error(message) {\n        if (!this.shouldLog('error'))\n            return;\n        console.error(this.logMessage('error', message));\n    }\n    static warn(message) {\n        if (!this.shouldLog('warn'))\n            return;\n        console.warn(this.logMessage('warn', message));\n    }\n    static info(message) {\n        if (!this.shouldLog('info'))\n            return;\n        console.log(this.logMessage('info', message));\n    }\n    static debug(message) {\n        if (!this.shouldLog('debug'))\n            return;\n        console.log(this.logMessage('debug', message));\n    }\n    static logMessage(level, message) {\n        return `[${level.toUpperCase()}] ${message}`;\n    }\n    static shouldLog(level) {\n        const currentLevel = levelToInt[config_1.config.logLevel];\n        return currentLevel <= levelToInt[level];\n    }\n}\nexports.Logger = Logger;\n//# sourceMappingURL=logger.js.map"]},"metadata":{},"sourceType":"script"}