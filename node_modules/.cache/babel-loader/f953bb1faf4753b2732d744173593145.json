{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // @ts-ignore: Could not find a declaration file for module\n\nvar zone_file_1 = require(\"zone-file\");\n\nvar profileTokens_1 = require(\"./profileTokens\");\n\nvar person_1 = require(\"./profileSchemas/person\");\n\nvar logger_1 = require(\"../logger\");\n\nvar fetchUtil_1 = require(\"../fetchUtil\");\n/**\n *\n * @param origin\n * @param tokenFileUrl\n *\n * @ignore\n */\n\n\nfunction makeProfileZoneFile(origin, tokenFileUrl) {\n  if (tokenFileUrl.indexOf('://') < 0) {\n    throw new Error('Invalid token file url');\n  }\n\n  var urlScheme = tokenFileUrl.split('://')[0];\n  var urlParts = tokenFileUrl.split('://')[1].split('/');\n  var domain = urlParts[0];\n  var pathname = \"/\".concat(urlParts.slice(1).join('/'));\n  var zoneFile = {\n    $origin: origin,\n    $ttl: 3600,\n    uri: [{\n      name: '_http._tcp',\n      priority: 10,\n      weight: 1,\n      target: \"\".concat(urlScheme, \"://\").concat(domain).concat(pathname)\n    }]\n  };\n  var zoneFileTemplate = '{$origin}\\n{$ttl}\\n{uri}\\n';\n  return zone_file_1.makeZoneFile(zoneFile, zoneFileTemplate);\n}\n\nexports.makeProfileZoneFile = makeProfileZoneFile;\n/**\n *\n * @param zoneFileJson\n *\n * @ignore\n */\n\nfunction getTokenFileUrl(zoneFileJson) {\n  if (!zoneFileJson.hasOwnProperty('uri')) {\n    return null;\n  }\n\n  if (!Array.isArray(zoneFileJson.uri)) {\n    return null;\n  }\n\n  if (zoneFileJson.uri.length < 1) {\n    return null;\n  }\n\n  var firstUriRecord = zoneFileJson.uri[0];\n\n  if (!firstUriRecord.hasOwnProperty('target')) {\n    return null;\n  }\n\n  var tokenFileUrl = firstUriRecord.target;\n\n  if (tokenFileUrl.startsWith('https')) {// pass\n  } else if (tokenFileUrl.startsWith('http')) {// pass\n  } else {\n    tokenFileUrl = \"https://\".concat(tokenFileUrl);\n  }\n\n  return tokenFileUrl;\n}\n\nexports.getTokenFileUrl = getTokenFileUrl;\n/**\n *\n * @param zoneFile\n * @param publicKeyOrAddress\n *\n * @ignore\n */\n\nfunction resolveZoneFileToProfile(zoneFile, publicKeyOrAddress) {\n  return new Promise(function (resolve, reject) {\n    var zoneFileJson = null;\n\n    try {\n      zoneFileJson = zone_file_1.parseZoneFile(zoneFile);\n\n      if (!zoneFileJson.hasOwnProperty('$origin')) {\n        zoneFileJson = null;\n      }\n    } catch (e) {\n      reject(e);\n    }\n\n    var tokenFileUrl = null;\n\n    if (zoneFileJson && Object.keys(zoneFileJson).length > 0) {\n      tokenFileUrl = getTokenFileUrl(zoneFileJson);\n    } else {\n      var profile = null;\n\n      try {\n        profile = JSON.parse(zoneFile);\n        profile = person_1.Person.fromLegacyFormat(profile).profile();\n      } catch (error) {\n        reject(error);\n      }\n\n      resolve(profile);\n      return;\n    }\n\n    if (tokenFileUrl) {\n      fetchUtil_1.fetchPrivate(tokenFileUrl).then(function (response) {\n        return response.text();\n      }).then(function (responseText) {\n        return JSON.parse(responseText);\n      }).then(function (responseJson) {\n        var tokenRecords = responseJson;\n        var profile = profileTokens_1.extractProfile(tokenRecords[0].token, publicKeyOrAddress);\n        resolve(profile);\n      }).catch(function (error) {\n        logger_1.Logger.error(\"resolveZoneFileToProfile: error fetching token file \".concat(tokenFileUrl, \": \").concat(error));\n        reject(error);\n      });\n    } else {\n      logger_1.Logger.debug('Token file url not found. Resolving to blank profile.');\n      resolve({});\n    }\n  });\n}\n\nexports.resolveZoneFileToProfile = resolveZoneFileToProfile;","map":{"version":3,"sources":["../../src/profiles/profileZoneFiles.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// @ts-ignore: Could not find a declaration file for module\nconst zone_file_1 = require(\"zone-file\");\nconst profileTokens_1 = require(\"./profileTokens\");\nconst person_1 = require(\"./profileSchemas/person\");\nconst logger_1 = require(\"../logger\");\nconst fetchUtil_1 = require(\"../fetchUtil\");\n/**\n *\n * @param origin\n * @param tokenFileUrl\n *\n * @ignore\n */\nfunction makeProfileZoneFile(origin, tokenFileUrl) {\n    if (tokenFileUrl.indexOf('://') < 0) {\n        throw new Error('Invalid token file url');\n    }\n    const urlScheme = tokenFileUrl.split('://')[0];\n    const urlParts = tokenFileUrl.split('://')[1].split('/');\n    const domain = urlParts[0];\n    const pathname = `/${urlParts.slice(1).join('/')}`;\n    const zoneFile = {\n        $origin: origin,\n        $ttl: 3600,\n        uri: [\n            {\n                name: '_http._tcp',\n                priority: 10,\n                weight: 1,\n                target: `${urlScheme}://${domain}${pathname}`\n            }\n        ]\n    };\n    const zoneFileTemplate = '{$origin}\\n{$ttl}\\n{uri}\\n';\n    return zone_file_1.makeZoneFile(zoneFile, zoneFileTemplate);\n}\nexports.makeProfileZoneFile = makeProfileZoneFile;\n/**\n *\n * @param zoneFileJson\n *\n * @ignore\n */\nfunction getTokenFileUrl(zoneFileJson) {\n    if (!zoneFileJson.hasOwnProperty('uri')) {\n        return null;\n    }\n    if (!Array.isArray(zoneFileJson.uri)) {\n        return null;\n    }\n    if (zoneFileJson.uri.length < 1) {\n        return null;\n    }\n    const firstUriRecord = zoneFileJson.uri[0];\n    if (!firstUriRecord.hasOwnProperty('target')) {\n        return null;\n    }\n    let tokenFileUrl = firstUriRecord.target;\n    if (tokenFileUrl.startsWith('https')) {\n        // pass\n    }\n    else if (tokenFileUrl.startsWith('http')) {\n        // pass\n    }\n    else {\n        tokenFileUrl = `https://${tokenFileUrl}`;\n    }\n    return tokenFileUrl;\n}\nexports.getTokenFileUrl = getTokenFileUrl;\n/**\n *\n * @param zoneFile\n * @param publicKeyOrAddress\n *\n * @ignore\n */\nfunction resolveZoneFileToProfile(zoneFile, publicKeyOrAddress) {\n    return new Promise((resolve, reject) => {\n        let zoneFileJson = null;\n        try {\n            zoneFileJson = zone_file_1.parseZoneFile(zoneFile);\n            if (!zoneFileJson.hasOwnProperty('$origin')) {\n                zoneFileJson = null;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n        let tokenFileUrl = null;\n        if (zoneFileJson && Object.keys(zoneFileJson).length > 0) {\n            tokenFileUrl = getTokenFileUrl(zoneFileJson);\n        }\n        else {\n            let profile = null;\n            try {\n                profile = JSON.parse(zoneFile);\n                profile = person_1.Person.fromLegacyFormat(profile).profile();\n            }\n            catch (error) {\n                reject(error);\n            }\n            resolve(profile);\n            return;\n        }\n        if (tokenFileUrl) {\n            fetchUtil_1.fetchPrivate(tokenFileUrl)\n                .then(response => response.text())\n                .then(responseText => JSON.parse(responseText))\n                .then((responseJson) => {\n                const tokenRecords = responseJson;\n                const profile = profileTokens_1.extractProfile(tokenRecords[0].token, publicKeyOrAddress);\n                resolve(profile);\n            })\n                .catch((error) => {\n                logger_1.Logger.error(`resolveZoneFileToProfile: error fetching token file ${tokenFileUrl}: ${error}`);\n                reject(error);\n            });\n        }\n        else {\n            logger_1.Logger.debug('Token file url not found. Resolving to blank profile.');\n            resolve({});\n        }\n    });\n}\nexports.resolveZoneFileToProfile = resolveZoneFileToProfile;\n//# sourceMappingURL=profileZoneFiles.js.map"]},"metadata":{},"sourceType":"script"}