{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"../utils\");\n/**\n * Class representing a transaction signer for pubkeyhash addresses\n * (a.k.a. single-sig addresses)\n * @private\n * @ignore\n */\n\n\nvar PubkeyHashSigner =\n/*#__PURE__*/\nfunction () {\n  function PubkeyHashSigner(ecPair) {\n    _classCallCheck(this, PubkeyHashSigner);\n\n    this.ecPair = ecPair;\n  }\n\n  _createClass(PubkeyHashSigner, [{\n    key: \"signerVersion\",\n    value: function signerVersion() {\n      return 1;\n    }\n  }, {\n    key: \"getAddress\",\n    value: function getAddress() {\n      var _this = this;\n\n      return Promise.resolve().then(function () {\n        return utils_1.ecPairToAddress(_this.ecPair);\n      });\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction, inputIndex) {\n      var _this2 = this;\n\n      return Promise.resolve().then(function () {\n        transaction.sign(inputIndex, _this2.ecPair);\n      });\n    }\n  }], [{\n    key: \"fromHexString\",\n    value: function fromHexString(keyHex) {\n      return new PubkeyHashSigner(utils_1.hexStringToECPair(keyHex));\n    }\n  }]);\n\n  return PubkeyHashSigner;\n}();\n\nexports.PubkeyHashSigner = PubkeyHashSigner;","map":{"version":3,"sources":["../../src/operations/signers.ts"],"names":[],"mappings":";;;;;;;;;;AAEA,IAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AA6BA;;;;;;;;IAMa,gB;;;AAGX,4BAAY,MAAZ,EAA0C;AAAA;;AACxC,SAAK,MAAL,GAAc,MAAd;AACD;;;;oCAMY;AACX,aAAO,CAAP;AACD;;;iCAES;AAAA;;AACR,aAAO,OAAO,CAAC,OAAR,GACJ,IADI,CACC;AAAA,eAAM,OAAA,CAAA,eAAA,CAAgB,KAAI,CAAC,MAArB,CAAN;AAAA,OADD,CAAP;AAED;;;oCAEe,W,EAAiC,U,EAAkB;AAAA;;AACjE,aAAO,OAAO,CAAC,OAAR,GACJ,IADI,CACC,YAAK;AACT,QAAA,WAAW,CAAC,IAAZ,CAAiB,UAAjB,EAA6B,MAAI,CAAC,MAAlC;AACD,OAHI,CAAP;AAID;;;kCAlBoB,M,EAAc;AACjC,aAAO,IAAI,gBAAJ,CAAqB,OAAA,CAAA,iBAAA,CAAkB,MAAlB,CAArB,CAAP;AACD;;;;;;AATH,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"../utils\");\n/**\n * Class representing a transaction signer for pubkeyhash addresses\n * (a.k.a. single-sig addresses)\n * @private\n * @ignore\n */\nclass PubkeyHashSigner {\n    constructor(ecPair) {\n        this.ecPair = ecPair;\n    }\n    static fromHexString(keyHex) {\n        return new PubkeyHashSigner(utils_1.hexStringToECPair(keyHex));\n    }\n    signerVersion() {\n        return 1;\n    }\n    getAddress() {\n        return Promise.resolve()\n            .then(() => utils_1.ecPairToAddress(this.ecPair));\n    }\n    signTransaction(transaction, inputIndex) {\n        return Promise.resolve()\n            .then(() => {\n            transaction.sign(inputIndex, this.ecPair);\n        });\n    }\n}\nexports.PubkeyHashSigner = PubkeyHashSigner;\n//# sourceMappingURL=signers.js.map"]},"metadata":{},"sourceType":"script"}