{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/aashan/2048/node_modules/@babel/runtime/regenerator\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bitcoinjs_lib_1 = require(\"bitcoinjs-lib\");\n\nvar crypto = require(\"crypto\"); // @ts-ignore: Could not find a declaration file for module\n\n\nvar jsontokens_1 = require(\"jsontokens\");\n\nvar utils_1 = require(\"../utils\");\n\nvar fetchUtil_1 = require(\"../fetchUtil\");\n\nvar keys_1 = require(\"../keys\");\n\nvar logger_1 = require(\"../logger\");\n\nvar errors_1 = require(\"../errors\");\n/**\n * @ignore\n */\n\n\nexports.BLOCKSTACK_GAIA_HUB_LABEL = 'blockstack-gaia-hub-config';\n/**\n *\n * @param filename\n * @param contents\n * @param hubConfig\n * @param contentType\n *\n * @ignore\n */\n\nfunction uploadToGaiaHub(filename, contents, hubConfig) {\n  var contentType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'application/octet-stream';\n  return __awaiter(this, void 0, void 0,\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var response, responseText, responseJSON;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            logger_1.Logger.debug(\"uploadToGaiaHub: uploading \".concat(filename, \" to \").concat(hubConfig.server));\n            _context.next = 3;\n            return fetchUtil_1.fetchPrivate(\"\".concat(hubConfig.server, \"/store/\").concat(hubConfig.address, \"/\").concat(filename), {\n              method: 'POST',\n              headers: {\n                'Content-Type': contentType,\n                Authorization: \"bearer \".concat(hubConfig.token)\n              },\n              body: contents\n            });\n\n          case 3:\n            response = _context.sent;\n\n            if (response.ok) {\n              _context.next = 6;\n              break;\n            }\n\n            throw new Error('Error when uploading to Gaia hub');\n\n          case 6:\n            _context.next = 8;\n            return response.text();\n\n          case 8:\n            responseText = _context.sent;\n            responseJSON = JSON.parse(responseText);\n            return _context.abrupt(\"return\", responseJSON.publicURL);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}\n\nexports.uploadToGaiaHub = uploadToGaiaHub;\n\nfunction deleteFromGaiaHub(filename, hubConfig) {\n  return __awaiter(this, void 0, void 0,\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    var response, responseMsg, errorMsg;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            logger_1.Logger.debug(\"deleteFromGaiaHub: deleting \".concat(filename, \" from \").concat(hubConfig.server));\n            _context2.next = 3;\n            return fetch(\"\".concat(hubConfig.server, \"/delete/\").concat(hubConfig.address, \"/\").concat(filename), {\n              method: 'DELETE',\n              headers: {\n                Authorization: \"bearer \".concat(hubConfig.token)\n              }\n            });\n\n          case 3:\n            response = _context2.sent;\n\n            if (response.ok) {\n              _context2.next = 22;\n              break;\n            }\n\n            responseMsg = '';\n            _context2.prev = 6;\n            _context2.next = 9;\n            return response.text();\n\n          case 9:\n            responseMsg = _context2.sent;\n            _context2.next = 15;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](6);\n            logger_1.Logger.debug(\"Error getting bad http response text: \".concat(_context2.t0));\n\n          case 15:\n            errorMsg = 'Error deleting file from Gaia hub: ' + \"\".concat(response.status, \" \").concat(response.statusText, \": \").concat(responseMsg);\n            logger_1.Logger.error(errorMsg);\n\n            if (!(response.status === 404)) {\n              _context2.next = 21;\n              break;\n            }\n\n            throw new errors_1.FileNotFound(errorMsg);\n\n          case 21:\n            throw new Error(errorMsg);\n\n          case 22:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[6, 12]]);\n  }));\n}\n\nexports.deleteFromGaiaHub = deleteFromGaiaHub;\n/**\n *\n * @param filename\n * @param hubConfig\n *\n * @ignore\n */\n\nfunction getFullReadUrl(filename, hubConfig) {\n  return Promise.resolve(\"\".concat(hubConfig.url_prefix).concat(hubConfig.address, \"/\").concat(filename));\n}\n\nexports.getFullReadUrl = getFullReadUrl;\n/**\n *\n * @param challengeText\n * @param signerKeyHex\n *\n * @ignore\n */\n\nfunction makeLegacyAuthToken(challengeText, signerKeyHex) {\n  // only sign specific legacy auth challenges.\n  var parsedChallenge;\n\n  try {\n    parsedChallenge = JSON.parse(challengeText);\n  } catch (err) {\n    throw new Error('Failed in parsing legacy challenge text from the gaia hub.');\n  }\n\n  if (parsedChallenge[0] === 'gaiahub' && parsedChallenge[3] === 'blockstack_storage_please_sign') {\n    var signer = utils_1.hexStringToECPair(signerKeyHex + (signerKeyHex.length === 64 ? '01' : ''));\n    var digest = bitcoinjs_lib_1.crypto.sha256(Buffer.from(challengeText));\n    var signatureBuffer = signer.sign(digest);\n    var signatureWithHash = bitcoinjs_lib_1.script.signature.encode(signatureBuffer, bitcoinjs_lib_1.Transaction.SIGHASH_NONE); // We only want the DER encoding so remove the sighash version byte at the end.\n    // See: https://github.com/bitcoinjs/bitcoinjs-lib/issues/1241#issuecomment-428062912\n\n    var signature = signatureWithHash.toString('hex').slice(0, -2);\n    var publickey = keys_1.getPublicKeyFromPrivate(signerKeyHex);\n    var token = Buffer.from(JSON.stringify({\n      publickey: publickey,\n      signature: signature\n    })).toString('base64');\n    return token;\n  } else {\n    throw new Error('Failed to connect to legacy gaia hub. If you operate this hub, please update.');\n  }\n}\n/**\n *\n * @param hubInfo\n * @param signerKeyHex\n * @param hubUrl\n * @param associationToken\n *\n * @ignore\n */\n\n\nfunction makeV1GaiaAuthToken(hubInfo, signerKeyHex, hubUrl, associationToken) {\n  var challengeText = hubInfo.challenge_text;\n  var handlesV1Auth = hubInfo.latest_auth_version && parseInt(hubInfo.latest_auth_version.slice(1), 10) >= 1;\n  var iss = keys_1.getPublicKeyFromPrivate(signerKeyHex);\n\n  if (!handlesV1Auth) {\n    return makeLegacyAuthToken(challengeText, signerKeyHex);\n  }\n\n  var salt = crypto.randomBytes(16).toString('hex');\n  var payload = {\n    gaiaChallenge: challengeText,\n    hubUrl: hubUrl,\n    iss: iss,\n    salt: salt,\n    associationToken: associationToken\n  };\n  var token = new jsontokens_1.TokenSigner('ES256K', signerKeyHex).sign(payload);\n  return \"v1:\".concat(token);\n}\n/**\n *\n * @ignore\n */\n\n\nfunction connectToGaiaHub(gaiaHubUrl, challengeSignerHex, associationToken) {\n  return __awaiter(this, void 0, void 0,\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3() {\n    var response, hubInfo, readURL, token, address;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            logger_1.Logger.debug(\"connectToGaiaHub: \".concat(gaiaHubUrl, \"/hub_info\"));\n            _context3.next = 3;\n            return fetchUtil_1.fetchPrivate(\"\".concat(gaiaHubUrl, \"/hub_info\"));\n\n          case 3:\n            response = _context3.sent;\n            _context3.next = 6;\n            return response.json();\n\n          case 6:\n            hubInfo = _context3.sent;\n            readURL = hubInfo.read_url_prefix;\n            token = makeV1GaiaAuthToken(hubInfo, challengeSignerHex, gaiaHubUrl, associationToken);\n            address = utils_1.ecPairToAddress(utils_1.hexStringToECPair(challengeSignerHex + (challengeSignerHex.length === 64 ? '01' : '')));\n            return _context3.abrupt(\"return\", {\n              url_prefix: readURL,\n              address: address,\n              token: token,\n              server: gaiaHubUrl\n            });\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n}\n\nexports.connectToGaiaHub = connectToGaiaHub;\n/**\n *\n * @param gaiaHubUrl\n * @param appPrivateKey\n *\n * @ignore\n */\n\nfunction getBucketUrl(gaiaHubUrl, appPrivateKey) {\n  return __awaiter(this, void 0, void 0,\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4() {\n    var challengeSigner, response, responseText, responseJSON, readURL, address, bucketUrl;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            challengeSigner = bitcoinjs_lib_1.ECPair.fromPrivateKey(Buffer.from(appPrivateKey, 'hex'));\n            _context4.next = 3;\n            return fetchUtil_1.fetchPrivate(\"\".concat(gaiaHubUrl, \"/hub_info\"));\n\n          case 3:\n            response = _context4.sent;\n            _context4.next = 6;\n            return response.text();\n\n          case 6:\n            responseText = _context4.sent;\n            responseJSON = JSON.parse(responseText);\n            readURL = responseJSON.read_url_prefix;\n            address = utils_1.ecPairToAddress(challengeSigner);\n            bucketUrl = \"\".concat(readURL).concat(address, \"/\");\n            return _context4.abrupt(\"return\", bucketUrl);\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n}\n\nexports.getBucketUrl = getBucketUrl;","map":{"version":3,"sources":["../../src/storage/hub.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bitcoinjs_lib_1 = require(\"bitcoinjs-lib\");\nconst crypto = require(\"crypto\");\n// @ts-ignore: Could not find a declaration file for module\nconst jsontokens_1 = require(\"jsontokens\");\nconst utils_1 = require(\"../utils\");\nconst fetchUtil_1 = require(\"../fetchUtil\");\nconst keys_1 = require(\"../keys\");\nconst logger_1 = require(\"../logger\");\nconst errors_1 = require(\"../errors\");\n/**\n * @ignore\n */\nexports.BLOCKSTACK_GAIA_HUB_LABEL = 'blockstack-gaia-hub-config';\n/**\n *\n * @param filename\n * @param contents\n * @param hubConfig\n * @param contentType\n *\n * @ignore\n */\nfunction uploadToGaiaHub(filename, contents, hubConfig, contentType = 'application/octet-stream') {\n    return __awaiter(this, void 0, void 0, function* () {\n        logger_1.Logger.debug(`uploadToGaiaHub: uploading ${filename} to ${hubConfig.server}`);\n        const response = yield fetchUtil_1.fetchPrivate(`${hubConfig.server}/store/${hubConfig.address}/${filename}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': contentType,\n                Authorization: `bearer ${hubConfig.token}`\n            },\n            body: contents\n        });\n        if (!response.ok) {\n            throw new Error('Error when uploading to Gaia hub');\n        }\n        const responseText = yield response.text();\n        const responseJSON = JSON.parse(responseText);\n        return responseJSON.publicURL;\n    });\n}\nexports.uploadToGaiaHub = uploadToGaiaHub;\nfunction deleteFromGaiaHub(filename, hubConfig) {\n    return __awaiter(this, void 0, void 0, function* () {\n        logger_1.Logger.debug(`deleteFromGaiaHub: deleting ${filename} from ${hubConfig.server}`);\n        const response = yield fetch(`${hubConfig.server}/delete/${hubConfig.address}/${filename}`, {\n            method: 'DELETE',\n            headers: {\n                Authorization: `bearer ${hubConfig.token}`\n            }\n        });\n        if (!response.ok) {\n            let responseMsg = '';\n            try {\n                responseMsg = yield response.text();\n            }\n            catch (error) {\n                logger_1.Logger.debug(`Error getting bad http response text: ${error}`);\n            }\n            const errorMsg = 'Error deleting file from Gaia hub: '\n                + `${response.status} ${response.statusText}: ${responseMsg}`;\n            logger_1.Logger.error(errorMsg);\n            if (response.status === 404) {\n                throw new errors_1.FileNotFound(errorMsg);\n            }\n            else {\n                throw new Error(errorMsg);\n            }\n        }\n    });\n}\nexports.deleteFromGaiaHub = deleteFromGaiaHub;\n/**\n *\n * @param filename\n * @param hubConfig\n *\n * @ignore\n */\nfunction getFullReadUrl(filename, hubConfig) {\n    return Promise.resolve(`${hubConfig.url_prefix}${hubConfig.address}/${filename}`);\n}\nexports.getFullReadUrl = getFullReadUrl;\n/**\n *\n * @param challengeText\n * @param signerKeyHex\n *\n * @ignore\n */\nfunction makeLegacyAuthToken(challengeText, signerKeyHex) {\n    // only sign specific legacy auth challenges.\n    let parsedChallenge;\n    try {\n        parsedChallenge = JSON.parse(challengeText);\n    }\n    catch (err) {\n        throw new Error('Failed in parsing legacy challenge text from the gaia hub.');\n    }\n    if (parsedChallenge[0] === 'gaiahub'\n        && parsedChallenge[3] === 'blockstack_storage_please_sign') {\n        const signer = utils_1.hexStringToECPair(signerKeyHex\n            + (signerKeyHex.length === 64 ? '01' : ''));\n        const digest = bitcoinjs_lib_1.crypto.sha256(Buffer.from(challengeText));\n        const signatureBuffer = signer.sign(digest);\n        const signatureWithHash = bitcoinjs_lib_1.script.signature.encode(signatureBuffer, bitcoinjs_lib_1.Transaction.SIGHASH_NONE);\n        // We only want the DER encoding so remove the sighash version byte at the end.\n        // See: https://github.com/bitcoinjs/bitcoinjs-lib/issues/1241#issuecomment-428062912\n        const signature = signatureWithHash.toString('hex').slice(0, -2);\n        const publickey = keys_1.getPublicKeyFromPrivate(signerKeyHex);\n        const token = Buffer.from(JSON.stringify({ publickey, signature })).toString('base64');\n        return token;\n    }\n    else {\n        throw new Error('Failed to connect to legacy gaia hub. If you operate this hub, please update.');\n    }\n}\n/**\n *\n * @param hubInfo\n * @param signerKeyHex\n * @param hubUrl\n * @param associationToken\n *\n * @ignore\n */\nfunction makeV1GaiaAuthToken(hubInfo, signerKeyHex, hubUrl, associationToken) {\n    const challengeText = hubInfo.challenge_text;\n    const handlesV1Auth = (hubInfo.latest_auth_version\n        && parseInt(hubInfo.latest_auth_version.slice(1), 10) >= 1);\n    const iss = keys_1.getPublicKeyFromPrivate(signerKeyHex);\n    if (!handlesV1Auth) {\n        return makeLegacyAuthToken(challengeText, signerKeyHex);\n    }\n    const salt = crypto.randomBytes(16).toString('hex');\n    const payload = {\n        gaiaChallenge: challengeText,\n        hubUrl,\n        iss,\n        salt,\n        associationToken\n    };\n    const token = new jsontokens_1.TokenSigner('ES256K', signerKeyHex).sign(payload);\n    return `v1:${token}`;\n}\n/**\n *\n * @ignore\n */\nfunction connectToGaiaHub(gaiaHubUrl, challengeSignerHex, associationToken) {\n    return __awaiter(this, void 0, void 0, function* () {\n        logger_1.Logger.debug(`connectToGaiaHub: ${gaiaHubUrl}/hub_info`);\n        const response = yield fetchUtil_1.fetchPrivate(`${gaiaHubUrl}/hub_info`);\n        const hubInfo = yield response.json();\n        const readURL = hubInfo.read_url_prefix;\n        const token = makeV1GaiaAuthToken(hubInfo, challengeSignerHex, gaiaHubUrl, associationToken);\n        const address = utils_1.ecPairToAddress(utils_1.hexStringToECPair(challengeSignerHex\n            + (challengeSignerHex.length === 64 ? '01' : '')));\n        return {\n            url_prefix: readURL,\n            address,\n            token,\n            server: gaiaHubUrl\n        };\n    });\n}\nexports.connectToGaiaHub = connectToGaiaHub;\n/**\n *\n * @param gaiaHubUrl\n * @param appPrivateKey\n *\n * @ignore\n */\nfunction getBucketUrl(gaiaHubUrl, appPrivateKey) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const challengeSigner = bitcoinjs_lib_1.ECPair.fromPrivateKey(Buffer.from(appPrivateKey, 'hex'));\n        const response = yield fetchUtil_1.fetchPrivate(`${gaiaHubUrl}/hub_info`);\n        const responseText = yield response.text();\n        const responseJSON = JSON.parse(responseText);\n        const readURL = responseJSON.read_url_prefix;\n        const address = utils_1.ecPairToAddress(challengeSigner);\n        const bucketUrl = `${readURL}${address}/`;\n        return bucketUrl;\n    });\n}\nexports.getBucketUrl = getBucketUrl;\n//# sourceMappingURL=hub.js.map"]},"metadata":{},"sourceType":"script"}