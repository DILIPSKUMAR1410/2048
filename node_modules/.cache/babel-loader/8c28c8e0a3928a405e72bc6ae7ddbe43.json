{"ast":null,"code":"import _toConsumableArray from \"/home/aashan/2048/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/aashan/2048/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aashan/2048/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aashan/2048/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aashan/2048/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/aashan/2048/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/aashan/2048/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aashan/2048/src/Components/Game.js\";\nimport React from 'react';\nimport Board from './Board';\nimport { getNewGameState } from './actions/getNewGameState';\nimport { generateNewTile } from './actions/generateTileHandler';\nimport { getKeyHandler } from './inputHandlers/keyboard';\nimport { getTouchHandler } from './inputHandlers/touch';\nimport { UserSession, AppConfig } from 'blockstack';\nvar appConfig = new AppConfig();\nvar userSession = new UserSession({\n  appConfig: appConfig\n});\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Game, _React$Component);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n    _this.state = getNewGameState(4);\n    _this.rewind = _this.rewind.bind(_assertThisInitialized(_this));\n    _this.reset = _this.reset.bind(_assertThisInitialized(_this));\n    _this.keyPressed = _this.keyPressed.bind(_assertThisInitialized(_this));\n    _this.touchStart = _this.touchStart.bind(_assertThisInitialized(_this));\n    _this.touchEnd = _this.touchEnd.bind(_assertThisInitialized(_this));\n    _this.handleTouchMove = _this.handleTouchMove.bind(_assertThisInitialized(_this));\n    _this.save = _this.save.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"touchStart\",\n    value: function touchStart(event) {\n      var touch = event.touches[0];\n      if (!touch) return;\n      this.setState(function () {\n        return {\n          touch: {\n            X: touch.clientX,\n            Y: touch.clientY\n          }\n        };\n      });\n    }\n  }, {\n    key: \"touchEnd\",\n    value: function touchEnd(event) {\n      var handler = getTouchHandler(event, this.state.touch);\n      this.handleMove(handler);\n    }\n  }, {\n    key: \"keyPressed\",\n    value: function keyPressed(event) {\n      if (event.keyCode === 81) {\n        this.rewind();\n        return;\n      }\n\n      var handler = getKeyHandler(event);\n      this.handleMove(handler);\n    }\n  }, {\n    key: \"rewind\",\n    value: function rewind() {\n      if (this.state.history.length > 0) {\n        this.setState(function (state) {\n          var _state$history = state.history[state.history.length - 1],\n              squares = _state$history.squares,\n              score = _state$history.score;\n          state.history.splice(-1, 1);\n          return {\n            squares: squares,\n            score: score,\n            rewinds: state.rewinds + 1\n          };\n        });\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.setState(function () {\n        return getNewGameState(4);\n      });\n    }\n  }, {\n    key: \"writeHistory\",\n    value: function writeHistory(state) {\n      var _this2 = this;\n\n      var squares = state.squares,\n          score = state.score;\n      this.setState(function () {\n        return {\n          history: [].concat(_toConsumableArray(_this2.state.history), [{\n            squares: squares,\n            score: score\n          }])\n        };\n      });\n    }\n  }, {\n    key: \"handleMove\",\n    value: function handleMove(handler) {\n      var _this3 = this;\n\n      var _handler = handler(this.state),\n          squares = _handler.squares,\n          isMoved = _handler.isMoved,\n          isStarted = _handler.isStarted,\n          score = _handler.score;\n\n      if (isMoved) {\n        this.writeHistory({\n          squares: this.state.squares,\n          score: this.state.score\n        });\n        squares = generateNewTile(squares);\n        this.setState(function () {\n          if (_this3.state.max >= score) return {\n            squares: squares,\n            isMoved: isMoved,\n            isStarted: isStarted,\n            score: score\n          };else return {\n            squares: squares,\n            isMoved: isMoved,\n            isStarted: isStarted,\n            score: score,\n            max: score\n          };\n        });\n        return;\n      }\n\n      this.setState(function () {\n        return {\n          isMoved: false\n        };\n      });\n    } // just a hack for iOS bouncing effect\n\n  }, {\n    key: \"handleTouchMove\",\n    value: function handleTouchMove(event) {\n      var className = event.target.className;\n\n      if (className.includes('square')) {\n        event.preventDefault();\n        ;\n        return;\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener(\"touchmove\", this.handleTouchMove, {\n        passive: false\n      });\n      document.addEventListener(\"keydown\", this.keyPressed, false);\n      var doc = document.getElementById(\"game-board\");\n      doc.addEventListener(\"touchstart\", this.touchStart, false);\n      doc.addEventListener(\"touchend\", this.touchEnd, false);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener(\"touchmove\", this.handleTouchMove, {\n        passive: false\n      });\n      document.removeEventListener(\"keydown\", this.keyPressed, false);\n      var doc = document.getElementById(\"game-board\");\n      doc.removeEventListener(\"touchstart\", this.touchStart, false);\n      doc.removeEventListener(\"touchend\", this.touchEnd, false);\n    }\n  }, {\n    key: \"save\",\n    value: function save() {\n      var tempDate = new Date();\n      var date = tempDate.getDate() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getFullYear();\n      var temp = [];\n\n      if (localStorage.getItem(\"cirulli\")) {\n        temp = JSON.parse(localStorage.getItem(\"cirulli\"));\n      }\n\n      temp.push([date, this.state.score]);\n      var scorelist = [];\n      var i, j;\n\n      for (i = 0; i < temp.length; i++) {\n        scorelist.push(temp[i][1]);\n      }\n\n      scorelist.sort(function (a, b) {\n        return b - a;\n      }); // scorelist.reverse();\n\n      var allscores = [];\n\n      for (i = 0; i < temp.length; i++) {\n        for (j = 0; j < temp.length; j++) {\n          if (temp[j][1] == scorelist[i]) {\n            allscores.push(temp[j]);\n            break;\n          }\n        }\n\n        if (allscores.length == 10) break;\n      }\n\n      localStorage.setItem(\"cirulli\", JSON.stringify(allscores));\n      var options = {\n        encrypt: false\n      };\n      userSession.putFile('Cirulli.json', JSON.stringify(allscores), options);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"game\",\n        id: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        id: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Score: \", this.state.score)), React.createElement(\"div\", {\n        className: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, this.state.rewinds > 0 ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Rewinds used: \", this.state.rewinds) : null), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, this.state.isStarted && !this.state.isMoved ? \"Nothing has moved\" : null)), React.createElement(Board, {\n        squares: this.state.squares,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"veryBoringButton\",\n        onClick: this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"New game\"), React.createElement(\"button\", {\n        className: \"veryBoringButton\",\n        onClick: this.save,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Save\"))));\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nexport default Game;","map":{"version":3,"sources":["/home/aashan/2048/src/Components/Game.js"],"names":["React","Board","getNewGameState","generateNewTile","getKeyHandler","getTouchHandler","UserSession","AppConfig","appConfig","userSession","Game","props","state","rewind","bind","reset","keyPressed","touchStart","touchEnd","handleTouchMove","save","event","touch","touches","setState","X","clientX","Y","clientY","handler","handleMove","keyCode","history","length","squares","score","splice","rewinds","isMoved","isStarted","writeHistory","max","className","target","includes","preventDefault","document","addEventListener","passive","doc","getElementById","removeEventListener","tempDate","Date","date","getDate","getMonth","getFullYear","temp","localStorage","getItem","JSON","parse","push","scorelist","i","j","sort","a","b","allscores","setItem","stringify","options","encrypt","putFile","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Board from './Board';\r\nimport { getNewGameState } from './actions/getNewGameState';\r\nimport { generateNewTile } from './actions/generateTileHandler';\r\nimport { getKeyHandler } from './inputHandlers/keyboard';\r\nimport { getTouchHandler } from './inputHandlers/touch';\r\nimport {\r\n  UserSession,\r\n  AppConfig,\r\n} from 'blockstack';\r\nconst appConfig = new AppConfig()\r\nconst userSession = new UserSession({ appConfig: appConfig })\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = getNewGameState(4);\r\n    this.rewind = this.rewind.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n    this.keyPressed = this.keyPressed.bind(this);\r\n    this.touchStart = this.touchStart.bind(this);\r\n    this.touchEnd = this.touchEnd.bind(this);\r\n    this.handleTouchMove = this.handleTouchMove.bind(this);\r\n    this.save = this.save.bind(this);\r\n  }\r\n\r\n  touchStart(event) {\r\n    let touch = event.touches[0];\r\n    if (!touch)\r\n      return;\r\n\r\n    this.setState(() => {\r\n      return { touch : { X : touch.clientX, Y : touch.clientY }};\r\n    });\r\n  }\r\n\r\n  touchEnd(event) {\r\n    const handler = getTouchHandler(event, this.state.touch);\r\n    this.handleMove(handler);\r\n  }\r\n\r\n  keyPressed(event) {\r\n    if (event.keyCode === 81) {\r\n      this.rewind();\r\n      return;\r\n    }\r\n    const handler = getKeyHandler(event);\r\n    this.handleMove(handler);\r\n  }\r\n\r\n  rewind() {\r\n    if (this.state.history.length > 0) {\r\n      this.setState((state) => {\r\n        const { squares, score } = state.history[state.history.length - 1];\r\n        state.history.splice(-1, 1);\r\n        return { squares : squares, score : score, rewinds : state.rewinds + 1 };\r\n      });\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.setState(() => {\r\n      return getNewGameState(4);\r\n    });\r\n  }\r\n\r\n  writeHistory(state) {\r\n    const { squares, score } = state;\r\n    this.setState(() => {    \r\n      return { history : [...this.state.history, { squares : squares, score : score }] }\r\n    });\r\n  }\r\n\r\n  handleMove(handler) {\r\n    let { squares, isMoved, isStarted, score } = handler(this.state);\r\n    if (isMoved) {\r\n      this.writeHistory({ squares : this.state.squares, score : this.state.score });\r\n      squares = generateNewTile(squares);\r\n      this.setState(() => {\r\n        if(this.state.max>=score)\r\n          return { squares : squares, isMoved : isMoved, isStarted : isStarted, score : score };\r\n        else\r\n          return { squares : squares, isMoved : isMoved, isStarted : isStarted, score : score, max: score };\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    this.setState(() => {\r\n      return { isMoved : false };\r\n    });\r\n  }\r\n\r\n  // just a hack for iOS bouncing effect\r\n  handleTouchMove(event) {\r\n    const className = event.target.className;\r\n    if (className.includes('square')) {\r\n      event.preventDefault();;\r\n      return;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"touchmove\", this.handleTouchMove, { passive : false });\r\n    document.addEventListener(\"keydown\", this.keyPressed, false);\r\n\r\n    const doc = document.getElementById(\"game-board\");\r\n    doc.addEventListener(\"touchstart\", this.touchStart, false);\r\n    doc.addEventListener(\"touchend\", this.touchEnd, false);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    document.removeEventListener(\"touchmove\", this.handleTouchMove, { passive : false });\r\n    document.removeEventListener(\"keydown\", this.keyPressed, false);\r\n\r\n    const doc = document.getElementById(\"game-board\");\r\n    doc.removeEventListener(\"touchstart\", this.touchStart, false);\r\n    doc.removeEventListener(\"touchend\", this.touchEnd, false);\r\n  }\r\n  save() {\r\n    var tempDate = new Date();\r\n    var date = tempDate.getDate() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getFullYear();\r\n    var temp=[];\r\n    if(localStorage.getItem(\"cirulli\"))\r\n    {\r\n      temp=JSON.parse(localStorage.getItem(\"cirulli\"));\r\n    }\r\n    temp.push([date, this.state.score]);\r\n    var scorelist=[];\r\n    var i,j;\r\n    for(i=0;i<temp.length;i++)\r\n      scorelist.push(temp[i][1]);\r\n    scorelist.sort(function(a,b){return b-a;}); \r\n    // scorelist.reverse();\r\n    var allscores=[];\r\n    for(i=0;i<temp.length;i++)\r\n    {\r\n      for(j=0;j<temp.length;j++)\r\n      {\r\n        if(temp[j][1]==scorelist[i])\r\n        {\r\n          allscores.push(temp[j]);\r\n          break;\r\n        }\r\n      }\r\n      if(allscores.length==10)\r\n        break;\r\n    }\r\n    localStorage.setItem(\"cirulli\",JSON.stringify(allscores));\r\n    const options = { encrypt: false };\r\n    userSession.putFile('Cirulli.json', JSON.stringify(allscores),options)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"game\" id=\"game\">\r\n        <div className=\"game-board\" id=\"game-board\">\r\n          <div className=\"status\">\r\n            <span>Score: {this.state.score}</span>\r\n          </div>\r\n          <div className=\"status\">\r\n            {this.state.rewinds > 0 ? <span>Rewinds used: {this.state.rewinds}</span> : null}\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <span>{(this.state.isStarted && !this.state.isMoved) ? \"Nothing has moved\" : null}</span>\r\n          </div>\r\n          <Board\r\n            squares={this.state.squares}\r\n          />\r\n        </div>\r\n        <div className=\"game-buttons\">\r\n          <ul>\r\n            <button className=\"veryBoringButton\" onClick={this.reset}>New game</button>\r\n            <button className=\"veryBoringButton\" onClick={this.save}>Save</button>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}