{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/aashan/2048/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar authConstants_1 = require(\"./authConstants\");\n\nvar utils_1 = require(\"../utils\");\n/**\n * Configuration data for the current app.\n *\n * On browser platforms, creating an instance of this\n * class without any arguments will use\n * `window.location.origin` as the app domain.\n * On non-browser platforms, you need to\n * specify an app domain as the second argument.\n *\n */\n\n\nvar AppConfig =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {Array<string>} scopes - permissions this app is requesting\n   * @param {string} appDomain - the app domain\n   * @param {string} redirectPath - path on app domain to redirect users to after authentication\n   * @param {string} manifestPath - path relative to app domain of app's manifest file\n   * @param {string} coreNode - override the default or user selected core node\n   * @param {string} authenticatorURL - the web-based fall back authenticator\n   * ([[DEFAULT_BLOCKSTACK_HOST]])\n   */\n  function AppConfig() {\n    var scopes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : authConstants_1.DEFAULT_SCOPE.slice();\n    var appDomain = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : utils_1.getGlobalObject('location', {\n      returnEmptyObject: true\n    }).origin;\n    var redirectPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var manifestPath = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '/manifest.json';\n    var coreNode = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    var authenticatorURL = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : authConstants_1.DEFAULT_BLOCKSTACK_HOST;\n\n    _classCallCheck(this, AppConfig);\n\n    this.appDomain = appDomain;\n    this.scopes = scopes;\n    this.redirectPath = redirectPath;\n    this.manifestPath = manifestPath;\n\n    if (!coreNode) {\n      this.coreNode = authConstants_1.DEFAULT_CORE_NODE;\n    } else {\n      this.coreNode = coreNode;\n    }\n\n    this.authenticatorURL = authenticatorURL;\n  }\n  /**\n   * The location to which the authenticator should\n   * redirect the user.\n   * @returns {string} - URI\n   */\n\n\n  _createClass(AppConfig, [{\n    key: \"redirectURI\",\n    value: function redirectURI() {\n      return \"\".concat(this.appDomain).concat(this.redirectPath);\n    }\n    /**\n     * The location of the app's manifest file.\n     * @returns {string} - URI\n     */\n\n  }, {\n    key: \"manifestURI\",\n    value: function manifestURI() {\n      return \"\".concat(this.appDomain).concat(this.manifestPath);\n    }\n  }]);\n\n  return AppConfig;\n}();\n\nexports.AppConfig = AppConfig;","map":{"version":3,"sources":["../../src/auth/appConfig.ts"],"names":[],"mappings":";;;;;;;;;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AAEA;;;;;;;;;;;;IAUa,S;;;AA8CX;;;;;;;;;AASA,uBAK8D;AAAA,QALlD,MAKkD,uEAL1B,eAAA,CAAA,aAAA,CAAc,KAAd,EAK0B;AAAA,QAJlD,SAIkD,uEAJ9B,OAAA,CAAA,eAAA,CAAgB,UAAhB,EAA4B;AAAE,MAAA,iBAAiB,EAAE;AAArB,KAA5B,EAAyD,MAI3B;AAAA,QAHlD,YAGkD,uEAH3B,EAG2B;AAAA,QAFlD,YAEkD,uEAF3B,gBAE2B;AAAA,QADlD,QACkD,uEADxB,IACwB;AAAA,QAAlD,gBAAkD,uEAAvB,eAAA,CAAA,uBAAuB;;AAAA;;AAC5D,SAAK,SAAL,GAAiB,SAAjB;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,YAAL,GAAoB,YAApB;AACA,SAAK,YAAL,GAAoB,YAApB;;AAEA,QAAI,CAAC,QAAL,EAAe;AACb,WAAK,QAAL,GAAgB,eAAA,CAAA,iBAAhB;AACD,KAFD,MAEO;AACL,WAAK,QAAL,GAAgB,QAAhB;AACD;;AAED,SAAK,gBAAL,GAAwB,gBAAxB;AACD;AAED;;;;;;;;;kCAKW;AACT,uBAAU,KAAK,SAAf,SAA2B,KAAK,YAAhC;AACD;AAED;;;;;;;kCAIW;AACT,uBAAU,KAAK,SAAf,SAA2B,KAAK,YAAhC;AACD;;;;;;AA1FH,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst authConstants_1 = require(\"./authConstants\");\nconst utils_1 = require(\"../utils\");\n/**\n * Configuration data for the current app.\n *\n * On browser platforms, creating an instance of this\n * class without any arguments will use\n * `window.location.origin` as the app domain.\n * On non-browser platforms, you need to\n * specify an app domain as the second argument.\n *\n */\nclass AppConfig {\n    /**\n     * @param {Array<string>} scopes - permissions this app is requesting\n     * @param {string} appDomain - the app domain\n     * @param {string} redirectPath - path on app domain to redirect users to after authentication\n     * @param {string} manifestPath - path relative to app domain of app's manifest file\n     * @param {string} coreNode - override the default or user selected core node\n     * @param {string} authenticatorURL - the web-based fall back authenticator\n     * ([[DEFAULT_BLOCKSTACK_HOST]])\n     */\n    constructor(scopes = authConstants_1.DEFAULT_SCOPE.slice(), appDomain = utils_1.getGlobalObject('location', { returnEmptyObject: true }).origin, redirectPath = '', manifestPath = '/manifest.json', coreNode = null, authenticatorURL = authConstants_1.DEFAULT_BLOCKSTACK_HOST) {\n        this.appDomain = appDomain;\n        this.scopes = scopes;\n        this.redirectPath = redirectPath;\n        this.manifestPath = manifestPath;\n        if (!coreNode) {\n            this.coreNode = authConstants_1.DEFAULT_CORE_NODE;\n        }\n        else {\n            this.coreNode = coreNode;\n        }\n        this.authenticatorURL = authenticatorURL;\n    }\n    /**\n     * The location to which the authenticator should\n     * redirect the user.\n     * @returns {string} - URI\n     */\n    redirectURI() {\n        return `${this.appDomain}${this.redirectPath}`;\n    }\n    /**\n     * The location of the app's manifest file.\n     * @returns {string} - URI\n     */\n    manifestURI() {\n        return `${this.appDomain}${this.manifestPath}`;\n    }\n}\nexports.AppConfig = AppConfig;\n//# sourceMappingURL=appConfig.js.map"]},"metadata":{},"sourceType":"script"}